
services: 
  clickhouse:
    image: clickhouse/clickhouse-server:24.8
    container_name: clickhouse
    restart: always
    ports:
      - "8123:8123"   # HTTP-интерфейс
      - "9000:9000"   # TCP для клиентов
      - "9009:9009"   # Native protocol
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_config:/etc/clickhouse-server
    environment:
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}

  tabix:
    image: spoonest/clickhouse-tabix-web-client
    platform: linux/amd64
    container_name: tabix_new
    ports:
      - "8124:80"
    depends_on:
      - clickhouse
    environment:
      CLICKHOUSE_URL: "http://clickhouse:8123"
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: default
      CLICKHOUSE_DB: default
    stop_grace_period: 30s

  superset:
    build:
      context: .
      dockerfile: ./superset/Dockerfile
    image: preset/superset:latest
    container_name: superset
    ports:
      - "8088:8088"
    volumes:
      - superset_data:/app/superset_home
    depends_on:
      - clickhouse
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY}
      - SUPERSET_ADMIN_USERNAME=${SUPERSET_ADMIN_USERNAME}
      - SUPERSET_ADMIN_PASSWORD=${SUPERSET_ADMIN_PASSWORD}
      - SUPERSET_ADMIN_EMAIL=${SUPERSET_ADMIN_EMAIL}
      - SUPERSET_ADMIN_FIRSTNAME=Admin
      - SUPERSET_ADMIN_LASTNAME=User
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s
    command: >
      /bin/bash -c "
        # Простая установка без лишних флагов
        pip install clickhouse-sqlalchemy clickhouse-connect &&
        superset db upgrade &&
        superset fab create-admin --username $${SUPERSET_ADMIN_USERNAME} --firstname $${SUPERSET_ADMIN_FIRSTNAME} --lastname $${SUPERSET_ADMIN_LASTNAME} --email $${SUPERSET_ADMIN_EMAIL} --password $${SUPERSET_ADMIN_PASSWORD} &&
        superset init &&
        superset run -p 8088 --host=0.0.0.0
      "

  storage-service:
    build:
      context: .
      dockerfile: ./storage-service/Dockerfile
    container_name: storage-service
    restart: on-failure
    depends_on:
      - clickhouse
    ports:
      - "3001:3001"
    volumes:
      - ./storage-service/seeders:/app/seeders
    environment:
      - DB_NAME=${CLICKHOUSE_DB}
      - DB_USER=${CLICKHOUSE_USER}
      - DB_PASSWORD=${CLICKHOUSE_PASSWORD}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - DB_SEEDERS_FILE=${DB_SEEDERS_FILE}
      - DB_DROP_EVERY_RELAUNCH=${DB_DROP_EVERY_RELAUNCH}
  models-service:
    build:
      context: .
      dockerfile: ./model-service/Dockerfile
    container_name: models-service
    restart: on-failure
    ports:
      - "3002:3002"
    depends_on:
      - kafka
    environment:
      - SENTIMENT_MODEL_PATH=/app/sentimentmodel
      - KAFKA_BROKER_DOCKER=${KAFKA_BROKER_DOCKER}
      - KAFKA_BROKER_URL=${KAFKA_BROKER_URL}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - PRODUCER_CLIENT_ID=${PRODUCER_CLIENT_ID}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    restart: on-failure
    ports:
      - "3000:3000"
    depends_on:
      - storage-service
      - models-service
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper_new
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka_new
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop_new
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092


volumes:
  clickhouse_data:
  clickhouse_config:
  superset_data: